tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  iaas.nodes.ibm.IbmCloudFunction:
    derived_from: iaas.nodes.abstract.Function
    metadata:
      targetNamespace: "iaas.nodes.ibm"
      abstract: "false"
      final: "false"
    attributes:
      function_name:
        type: string
    properties:
      namespace:
        type: string
        description: The name of the function namespace
      timeout:
        type: integer
        description: The timeout limit to terminate the action, specified in milliseconds
        default: 60000
      memory:
        type: integer
        description: The maximum memory for the action, specified in MBs
        default: 256
      runtime:
        type: string
        description: Function runtime (List of possible values - https://cloud.ibm.com/docs/openwhisk?topic=openwhisk-runtimes)
        default: "python:3.7"
        constraints:
          - valid_values: [ nodejs:12, python:3.7, python:3.6, swift:4.2, php:7.3, go:1.15, ruby:2.5, java, dotnet:2.2 ]
      handler:
        type: string
        description: Handler for cloud function
        default: "main"
      zip_file:
        type: string
        description: The file path of code to execute and it supports only .zip extension to create the action
      function_parameters:
        type: string
        required: false
        description: The file path of optional json file with configuration parameters
        default: "none"
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: iaas.nodes.ibm.IbmPlatform
          relationship: tosca.relationships.HostedOn
          occurrences: [ 1, 1 ]
    capabilities:
      orchestrated:
        occurrences: [ 0, UNBOUNDED ]
        type: iaas.capabilities.Orchestrated
        valid_source_types: [ iaas.nodes.ibm.IbmComposerOrchestration ]
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        inputs:
          name:
            type: string
            required: true
            default: { get_property: [ SELF, name ] }
          namespace:
            type: string
            required: true
            default: { get_property: [ SELF, namespace ] }
          timeout:
            type: string
            required: false
            default: { get_property: [ SELF, timeout ] }
          memory:
            type: string
            required: false
            default: { get_property: [ SELF, memory ] }
          runtime:
            type: string
            required: true
            default: { get_property: [ SELF, runtime ] }
          handler:
            type: string
            required: true
            default: { get_property: [ SELF, handler ] }
          code_path:
            type: string
            required: true
            default: { get_property: [ SELF, zip_file ] }
          function_parameters:
            type: string
            required: false
            default: { get_property: [ SELF, function_parameters ] }
        operations:
          create:
            implementation:
              primary: create
              timeout: 0
          delete:
            implementation:
              primary: delete
              timeout: 0
    artifacts:
      create:
        type: iaas.artifacts.Ansible
        file: create.yml
      delete:
        type: iaas.artifacts.Ansible
        file: delete.yml
